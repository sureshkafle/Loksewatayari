CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);

START TRANSACTION;
CREATE TABLE categories (
    id uuid NOT NULL,
    title text NOT NULL,
    slug text NOT NULL,
    description text NOT NULL,
    category_level integer NOT NULL,
    active_status integer NOT NULL,
    created_date timestamp with time zone NOT NULL,
    updated_date timestamp with time zone NOT NULL,
    CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE roles (
    id uuid NOT NULL,
    name character varying(256),
    normalized_name character varying(256),
    concurrency_stamp text,
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE users (
    id uuid NOT NULL,
    full_name text NOT NULL,
    login_identifier uuid NOT NULL,
    user_name character varying(256),
    normalized_user_name character varying(256),
    email character varying(256),
    normalized_email character varying(256),
    email_confirmed boolean NOT NULL,
    password_hash text,
    security_stamp text,
    concurrency_stamp text,
    phone_number text,
    phone_number_confirmed boolean NOT NULL,
    two_factor_enabled boolean NOT NULL,
    lockout_end timestamp with time zone,
    lockout_enabled boolean NOT NULL,
    access_failed_count integer NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE category_relations (
    id uuid NOT NULL,
    parent_category_id uuid NOT NULL,
    child_category_id uuid NOT NULL,
    CONSTRAINT pk_category_relations PRIMARY KEY (id),
    CONSTRAINT fk_category_relations_categories_child_category_id FOREIGN KEY (child_category_id) REFERENCES categories (id) ON DELETE CASCADE,
    CONSTRAINT fk_category_relations_categories_parent_category_id FOREIGN KEY (parent_category_id) REFERENCES categories (id) ON DELETE CASCADE
);

CREATE TABLE quizzes (
    id uuid NOT NULL,
    question text NOT NULL,
    options text[] NOT NULL,
    answer text NOT NULL,
    category_id uuid NOT NULL,
    active_status integer NOT NULL,
    created_date timestamp with time zone NOT NULL,
    updated_date timestamp with time zone NOT NULL,
    CONSTRAINT pk_quizzes PRIMARY KEY (id),
    CONSTRAINT fk_quizzes_categories_category_id FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE
);

CREATE TABLE role_claims (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    role_id uuid NOT NULL,
    claim_type text,
    claim_value text,
    CONSTRAINT pk_role_claims PRIMARY KEY (id),
    CONSTRAINT fk_role_claims_roles_role_id FOREIGN KEY (role_id) REFERENCES roles (id) ON DELETE CASCADE
);

CREATE TABLE user_claims (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    user_id uuid NOT NULL,
    claim_type text,
    claim_value text,
    CONSTRAINT pk_user_claims PRIMARY KEY (id),
    CONSTRAINT fk_user_claims_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE user_logins (
    login_provider text NOT NULL,
    provider_key text NOT NULL,
    provider_display_name text,
    user_id uuid NOT NULL,
    CONSTRAINT pk_user_logins PRIMARY KEY (login_provider, provider_key),
    CONSTRAINT fk_user_logins_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE user_roles (
    user_id uuid NOT NULL,
    role_id uuid NOT NULL,
    CONSTRAINT pk_user_roles PRIMARY KEY (user_id, role_id),
    CONSTRAINT fk_user_roles_roles_role_id FOREIGN KEY (role_id) REFERENCES roles (id) ON DELETE CASCADE,
    CONSTRAINT fk_user_roles_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE user_tokens (
    user_id uuid NOT NULL,
    login_provider text NOT NULL,
    name text NOT NULL,
    value text,
    CONSTRAINT pk_user_tokens PRIMARY KEY (user_id, login_provider, name),
    CONSTRAINT fk_user_tokens_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE INDEX ix_category_relations_child_category_id ON category_relations (child_category_id);

CREATE INDEX ix_category_relations_parent_category_id ON category_relations (parent_category_id);

CREATE INDEX ix_quizzes_category_id ON quizzes (category_id);

CREATE INDEX ix_role_claims_role_id ON role_claims (role_id);

CREATE UNIQUE INDEX "RoleNameIndex" ON roles (normalized_name);

CREATE INDEX ix_user_claims_user_id ON user_claims (user_id);

CREATE INDEX ix_user_logins_user_id ON user_logins (user_id);

CREATE INDEX ix_user_roles_role_id ON user_roles (role_id);

CREATE INDEX "EmailIndex" ON users (normalized_email);

CREATE UNIQUE INDEX "UserNameIndex" ON users (normalized_user_name);

INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20250121083322_Initial', '9.0.1');

COMMIT;